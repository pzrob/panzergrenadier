;SDL
actor
(include "cannon_crew.ext")
(include "mobility.inc")
{tag "emplacement"}
{mass 100000}

{collider "nothing"}
{Volume "body"
	{thickness 500}
	{component "body"}
}
;(include "selection/cannon.inc" scale(1.0))


{props "trench"}
	{obstacleid "trench_wall"}

	{NoCastShadows}
	{extender "land_patch"
		{AlignEnabled 1}
		{AlignStacked 0}
		{AlignVolumes 1}
		{TerrainType "ground" "ground"}
		{RemoveEntities 1}
		{BigKernel}
	}
	(define "volume"
		{Volume %0 {thickness 60} {tags "body"} {able {contact 0} {obstacle 1}}}
	)
	(define "foxhole"
		{Volume %0 {thickness 60} {tags "body"} {able {contact 1} {obstacle 1}}}
	)
	(define "boneLand"
		{bone %0 {parameters "Ground;Land;Align;"}}
	)
	(define "boneLand2"
		{bone %0 {parameters "Ground;Land;"}}
	)
	(define "boneAlign"
		{bone %0 {parameters "Align;"}}
	)




;====================(include "vehicle.ext")=============================

{PatherID  "vehicle.large"}
{Simulation {able 1}}
{props "vehicle" "obstacle_ignore_height" "emit_on_sink"}
{able "repaired" "minimap" "ally_crew"}
{lodclass "vehicle"}

{NoGroupMesh 1}
{sensor
	{Visor "hearing"
		{vision "noise_detection"}
		{bone "hearing_bone"}
	}
	{RecognizeTime 0.01}
	{InformRange 50 75}		;// first = AI , second = USER
}

{Weaponry
	{ManualAccuracy 1.00}
	{ManualAccuracyZoom 1.25}
}

{RimLight}

{extender "inventory"
	{weapon "mgun"
		{mask "mountable"}
	}
	{box
		{Size 9 15}
	}
}
;{boarder}
{placer {crew}}


;==================(include "construction_generic.inc")===============================


(define "armor_use_volume_thickness"
	{armor
		{setting "body"
			{ray_cast_thickness 0}
		}
		{setting "roof"
			{ray_cast_thickness 0}
		}
	}
)

;==================(include "construction_generic.inc")===============================


(define "brain_vehicle"
	{brain "vehicle"
		{state "vehicle"}
		{const "crush/min_danger_zone_time" 	1}
		{const "crush/min_danger_zone_length"	1}
	}
)


("brain_vehicle")

{PatherID "cannon.small"}


{targetClass "cannon_small" "ap fg"}
{targetSelector "cannon_small"}

{props "vehicle" "with_gun" "cannon" "emit_on_sink"}
{able "talk" "emit_passangers_on_enemy" "cannon" "Captor" "repaired" "minimap"}
{lodclass "cannon"}

{sensor
	{visor "main"
		{vision "cannon_main"}
		{bone "visor"}
	}
}

{Skeleton
	{bone "hearing_bone"
		{Position 0 0 40}
	}
}

{extender "inventory"
	{box
		{Size 9 6}
		{weight 10000}
		{item "repair_kit" 3}
	}
}

{Weaponry
	{place "gun"
		{gunner "gunner"}
	}
}

{extender "talk"
	{talker "cannon"}
}

(define "restore_ik_time"
	{RestoreIKTime 10}
)

{perks
	{blastwave_modifier 20.0}
}




;========================================================


(define "make_component"
	{volume %0
		{component %1}
		{tags %1}
	}
)



(define "body"
	("make_component" args "body" "body")
	("make_component" args "body1" "body")
	("make_component" args "body2" "body")
	("make_component" args "body3" "body")
	("make_component" args "body4" "body")
	("make_component" args "body5" "body")
	("make_component" args "body6" "body")
	("make_component" args "body7" "body")
	("make_component" args "body8" "body")
	("make_component" args "body9" "body")
	("make_component" args "body10" "body")
	("make_component" args "body11" "body")
	("make_component" args "body12" "body")
	("make_component" args "body13" "body")
	("make_component" args "body14" "body")
	("make_component" args "body15" "body")
	("make_component" args "body16" "body")
	("make_component" args "body17" "body")
	("make_component" args "body18" "body")
	("make_component" args "body19" "body")
	("make_component" args "body20" "body")

	("make_component" args "standc" "body")
	("make_component" args "standl" "body")
	("make_component" args "standl1" "body")
	("make_component" args "standl2" "body")
	("make_component" args "standr" "body")
	("make_component" args "standr1" "body")
	("make_component" args "standr2" "body")

	{component "body"
		{RepairTime %repair}
		{RepairOrder 0}
	}
)

(define "engine"
	("make_component" args "engine" "engine")
	("make_component" args "engine1" "engine")
	("make_component" args "engine2" "engine")
	("make_component" args "engine3" "engine")
	("make_component" args "engine4" "engine")
	("make_component" args "engine5" "engine")

	{component "engine"
		{RepairTime %repair}
		{RepairOrder 3}
	}
)








("body" repair(45))
